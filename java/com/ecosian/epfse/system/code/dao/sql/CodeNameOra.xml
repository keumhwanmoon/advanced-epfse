<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="codeNameOra">
    <resultMap type="com.ecosian.epfse.system.code.dao.vo.CodeNameVO" id="resultCombo">
        <result property="codeHdrId"   column="CODE_HDR_ID"  />
        <result property="userdefCode" column="USERDEF_CODE" />
        <result property="codeName"    column="CODE_NAME"    />
    </resultMap>
    <resultMap type="com.ecosian.epfse.system.code.dao.vo.CodeNameVO" id="result">
        <result property="userdefCode"  column="USERDEF_CODE"   />
        <result property="codeName"     column="CODE_NAME"      />
        <result property="intrrName"    column="INTRR_NAME"     />
        <result property="dispOrderNo"  column="DISP_ORDER_NO"  />
        <result property="useYn"        column="USE_YN"         />
        <result property="langCode"     column="LANG_CODE"      />
        <result property="codeHdrId"    column="CODE_HDR_ID"    />
        <result property="rowId"        column="ROW_ID"         />
    </resultMap>

    <!-- 조회 -->
    <!-- 참고) 레코드의 모든 컬럼이 NULL 이면 Runtime 시 NullPointerException -->
    <!--       발생하여 NOT NULL 이 되도록 ROW_ID 컬럼을 추가한다.            -->
    <select id="codeNameOra.selectList" resultMap="result" parameterType="com.ecosian.epfse.system.code.dao.vo.CodeNameVO">
        SELECT  /* sqlMapId(codeNameOra.selectList) */
                A1.USERDEF_CODE                                              <!-- V(20)   N 사용자정의코드 -->
              , A1.CODE_NAME                                                 <!-- V(200)  N 코드명         -->
              , B1.INTRR_NAME                                                <!-- V(200)  N 내부명         -->
              , A1.DISP_ORDER_NO                                             <!-- N(10,0) N 표시순서번호   -->
              , A1.USE_YN                                                    <!-- C(1)    N 사용여부       -->
              , A1.LANG_CODE                                                 <!-- V(20)   N 언어코드       -->
              , C1.CODE_HDR_ID                                               <!-- V(20)   N 코드헤더ID     -->
              , A1.USERDEF_CODE              AS ROW_ID                       <!-- 행ID -->
        FROM    TB_CODE_NAME                 A1                              <!-- [코드명] -->
        INNER JOIN
                TB_CODE                      B1                              <!-- [코드] -->
                ON  B1.CODE_HDR_ID           =  A1.CODE_HDR_ID               <!-- V(20)   N 코드헤더ID     -->
                AND B1.USERDEF_CODE          =  A1.USERDEF_CODE              <!-- V(20)   N 사용자정의코드 -->
        <if test='null != clsfyName and "" != clsfyName'>
            <if test='"3".equals(clsfyId)'>
                AND B1.INTRR_NAME            LIKE #{clsfyName} || '%'        <!-- V(200)  N 내부명         -->
            </if>
        </if>
        INNER JOIN
                TB_CODE_HDR                  C1                              <!-- [코드헤더] -->
                ON  C1.CODE_HDR_ID           =  B1.CODE_HDR_ID               <!-- V(20)   N 코드헤더ID     -->
        LEFT OUTER JOIN
                TB_CODE_NAME                 Z1                              <!-- [코드명] -->
                ON  Z1.LANG_CODE             =  #{userLangCode}              <!-- V(20)   N 언어코드       -->
                AND Z1.CODE_HDR_ID           =  #{langCodeHdrId}             <!-- V(20)   N 코드헤더ID     -->
                AND Z1.USERDEF_CODE          =  A1.LANG_CODE                 <!-- V(20)   N 언어코드       -->
        <where>
        <if test='null != langCode and "" != langCode'>
        AND     A1.LANG_CODE                 =  #{langCode}                  <!-- V(20)   N 언어코드       -->
        </if>
        AND     A1.CODE_HDR_ID               =  #{codeHdrId}                 <!-- V(20)   N 코드헤더ID     -->
        <if test='null != clsfyName and "" != clsfyName'>
            <if test='"1".equals(clsfyId)'>
        AND     A1.USERDEF_CODE              LIKE #{clsfyName} || '%'        <!-- V(20)   N 사용자정의코드 -->
            </if>
            <if test='"2".equals(clsfyId)'>
        AND     A1.CODE_NAME                 LIKE #{clsfyName} || '%'        <!-- V(200)  N 코드명         -->
            </if>
        </if>
        </where>
        ORDER BY
                A1.USERDEF_CODE              ASC
    </select>

    <!-- 콤보 목록 조회 -->
    <!-- 참고) 레코드의 모든 컬럼이 NULL 이면 Runtime 시 NullPointerException -->
    <!--       발생하여 NOT NULL 이 되도록 ROW_ID 컬럼을 추가한다.            -->
    <select id="codeNameOra.selectComboList" resultMap="resultCombo" parameterType="com.ecosian.epfse.system.code.dao.vo.CodeNameVO">
        SELECT  /* sqlMapId(codeNameOra.selectComboList) */
                C1.CODE_HDR_ID                                               <!-- V(20)   N 코드헤더ID     -->
              , B1.USERDEF_CODE                                              <!-- V(20)   N 사용자정의코드 -->
              , A1.CODE_NAME                                                 <!-- V(200)  N 코드명         -->
        FROM    TB_CODE_NAME                 A1                              <!-- [코드명] -->
        INNER JOIN TB_CODE                   B1                              <!-- [코드] -->
                ON  B1.CODE_HDR_ID           =  A1.CODE_HDR_ID               <!-- V(20)   N 코드헤더ID     -->
                AND B1.USERDEF_CODE          =  A1.USERDEF_CODE              <!-- V(20)   N 사용자정의코드 -->
        INNER JOIN TB_CODE_HDR               C1                              <!-- [코드헤더] -->
                ON  C1.CODE_HDR_ID           =  B1.CODE_HDR_ID               <!-- V(20)   N 코드헤더ID     -->
        WHERE   A1.LANG_CODE                 =  #{userLangCode}              <!-- V(20)   N 언어코드       -->
        AND     A1.CODE_HDR_ID               ${codeHdrIdList}                <!-- V(20)   N 코드헤더ID     -->
        AND     A1.USE_YN                    =  'Y'                          <!-- C(1)    N 사용여부       -->
        ORDER BY
                C1.CODE_HDR_ID               ASC
              , A1.DISP_ORDER_NO             ASC
              , A1.CODE_NAME                 ASC
    </select>

    <!-- 등록 -->
    <!-- 설명 : 코드 클래스 저장시 사용한다. -->
    <insert id="codeNameOra.insertInfo" parameterType="com.ecosian.epfse.system.code.dao.vo.CodeNameVO">
        INSERT INTO TB_CODE_NAME                                             <!-- [코드명] -->
        (       /* sqlMapId(codeNameOra.insertInfo) */
                LANG_CODE                                                    <!-- V(20)   N 언어코드       -->
              , CODE_HDR_ID                                                  <!-- V(20)   N 코드헤더ID     -->
              , USERDEF_CODE                                                 <!-- V(20)   N 사용자정의코드 -->
              , CODE_NAME                                                    <!-- V(200)  N 코드명         -->
              , DISP_ORDER_NO                                                <!-- N(10,0) N 표시순서번호   -->
              , USE_YN                                                       <!-- C(1)    N 사용여부       -->
        )
        VALUES
        (
                #{langCode}                                                  <!-- V(20)   N 언어코드       -->
              , #{codeHdrId}                                                 <!-- V(20)   N 코드헤더ID     -->
              , #{userdefCode}                                               <!-- V(20)   N 사용자정의코드 -->
              , #{codeName}                                                  <!-- V(200)  N 코드명         -->
              , #{dispOrderNo}                                               <!-- N(10,0) N 표시순서번호   -->
              , #{useYn}                                                     <!-- C(1)    N 사용여부       -->
        )
    </insert>

    <!-- 수정 -->
    <!-- 설명 : 코드 클래스 저장시 사용한다. -->
    <update id="codeNameOra.updateInfo" parameterType="com.ecosian.epfse.system.code.dao.vo.CodeNameVO">
        UPDATE  TB_CODE_NAME                                                 <!-- [코드명] -->
        SET     /* sqlMapId(codeNameOra.updateInfo) */
                USERDEF_CODE                 =  #{userdefCode}               <!-- V(20)   N 사용자정의코드 -->
              , CODE_NAME                    =  #{codeName}                  <!-- V(200)  N 코드명         -->
              , DISP_ORDER_NO                =  #{dispOrderNo}               <!-- N(10,0) N 표시순서번호   -->
              , USE_YN                       =  #{useYn}                     <!-- C(1)    N 사용여부       -->
        WHERE   LANG_CODE                    =  #{langCode}                  <!-- V(20)   N 언어코드       -->
        AND     CODE_HDR_ID                  =  #{codeHdrId}                 <!-- V(20)   N 코드헤더ID     -->
        AND     USERDEF_CODE                 =  #{rowId}                     <!-- V(20)   N 사용자정의코드 -->
    </update>

    <!-- 코드헤더ID 목록 수정 -->
    <!-- 설명 : 코드헤더 클래스 코드헤더ID 변경시 사용한다. -->
    <update id="codeNameOra.updateCodeHdrIdList" parameterType="com.ecosian.epfse.system.code.dao.vo.CodeNameVO">
        UPDATE  TB_CODE_NAME                                                 <!-- [코드명] -->
        SET     /* sqlMapId(codeNameOra.updateCodeHdrIdList) */
                CODE_HDR_ID                  =  #{codeHdrId}                 <!-- V(20)   N 코드헤더ID     -->
        WHERE   CODE_HDR_ID                  =  #{rowId}                     <!-- V(20)   N 코드헤더ID     -->
    </update>

    <!-- 정보 삭제 -->
    <!-- 설명 : 코드 클래스 삭제시 사용한다. -->
    <delete id="codeNameOra.deleteInfo" parameterType="com.ecosian.epfse.system.code.dao.vo.CodeNameVO">
        DELETE  /* sqlMapId(codeNameOra.deleteInfo) */
        FROM    TB_CODE_NAME                                                 <!-- [코드명] -->
        WHERE   LANG_CODE                    =  #{langCode}                  <!-- V(20)   N 언어코드       -->
        AND     CODE_HDR_ID                  =  #{codeHdrId}                 <!-- V(20)   N 코드헤더ID     -->
        AND     USERDEF_CODE                 =  #{rowId}                     <!-- V(20)   N 사용자정의코드 -->
    </delete>
</mapper>